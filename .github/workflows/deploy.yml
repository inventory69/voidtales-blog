# name: Deploy Astro Blog

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build_and_deploy:
#     runs-on: ubuntu-latest

#     # 1. Definiere ein Environment fÃ¼r den Job
#     environment:
#       name: production
#       url: https://blog.voidtales.win/

#     steps:
#       - name: ðŸ“¥ Checkout Code
#         uses: actions/checkout@v3
#         with:
#           # Stellt sicher, dass das Projekt in den richtigen Ordner geklont wird
#           path: 'voidtales-blog'

#       - name: ðŸ”§ Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: ðŸ“¦ Cache Node.js modules
#         id: cache-npm
#         uses: actions/cache@v3
#         with:
#           path: voidtales-blog/node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/voidtales-blog/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: ðŸ§© Install Dependencies
#         run: npm install
#         working-directory: './voidtales-blog'

#       - name: ðŸ”¨ Build Astro Project
#         run: npm run build
#         working-directory: './voidtales-blog'

#       - name: ðŸš€ Transfer with rsync
#         run: |
#           # SSH-Key in eine temporÃ¤re Datei schreiben
#           mkdir -p ~/.ssh
#           echo "${{ secrets.DIFFUSER_SSH_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
          
#           # Host-Key verifizieren
#           ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          
#           # rsync vom Runner ausfÃ¼hren und in einen temporÃ¤ren Ordner kopieren
#           # Korrigierter rsync-Befehl mit SSH-Parametern
#           rsync -az -e "ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa" --progress ./voidtales-blog/dist/ ${{ secrets.DIFFUSER_USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.DIFFUSER_USERNAME }}/tmp_deploy/
#         working-directory: '${{ github.workspace }}'

#       - name: ðŸ”„ Atomic Swap and Clean Up
#         id: 'laststep'
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.DIFFUSER_USERNAME }}
#           key: ${{ secrets.DIFFUSER_SSH_KEY }}
#           port: ${{ secrets.SSH_PORT }}
#           script: |
#             # 1. Definiere die Pfade
#             NEW_DEPLOY_PATH="/home/${{ secrets.DIFFUSER_USERNAME }}/tmp_deploy"
#             FINAL_PATH="/var/www/blog.voidtales.win"
#             BACKUP_PATH="/var/www/blog.voidtales.win-old"

#             # 2. Entferne das alte Backup-Verzeichnis, falls es existiert
#             sudo rm -rf $BACKUP_PATH

#             # 3. Benenne den alten Ordner um (dies ist der Atomic Swap!)
#             # Stelle sicher, dass der Ordner existiert, um Fehler zu vermeiden
#             if [ -d "$FINAL_PATH" ]; then
#               sudo mv $FINAL_PATH $BACKUP_PATH
#             fi

#             # 4. Verschiebe den neuen Ordner an den endgÃ¼ltigen Ort
#             sudo mv $NEW_DEPLOY_PATH $FINAL_PATH

#             echo "âœ… Deployment erfolgreich abgeschlossen."
